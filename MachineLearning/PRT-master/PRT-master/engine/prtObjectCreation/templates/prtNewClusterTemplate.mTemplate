classdef <fileName> < prtCluster
    %<fileName> Insert description of class here
    %
    
    properties (SetAccess=private)
        name = '<className>'                  % Insert the name of the clusterer
        nameAbbreviation = '<className>'      % A short abbreviation of the name
    end
    
    properties  
       % Place definitions of properties that your clusterer requires here
    end
    
    methods
        
        %Define a constructor
        function Obj = <fileName>(varargin)
            %Uncomment this line to enable parameter/value setting of public
            %properties for your clusterer
            % Obj = prtUtilAssignStringValuePairs(Obj,varargin{:});
        end
        
        % Put additional methods here (set, get methods, and any other
        % methods your clusterer requires)
    end
    
    methods (Access=protected, Hidden = true)
        
        function Obj = trainAction(Obj,DataSet)
            % Place code here to perform clusterer training.  This
            % function should set the properties of Obj so that in
            % runAction the clusterer can output decision statistics
            
        end
        
        function DataSetOut = runAction(Obj,DataSetIn)
            % Place code here to perform clusterer running.  This
            % function should set output a data matrix of size 
            % DataSetIn.nObservation x #Clusters where each element of the 
            % array specifies how likely observation is to be from each cluster.
            %
            %   If yOut is a vector or matrix containing the output values,
            %   the DataSetOut can be created with the following line of
            %   code:
            %   DataSetOut = DataSetIn.setObservations(yOut);

            %By default, do nothing; remove this line to include your 
            %algorithm
            DataSetOut = DataSetIn; 
        end
        
    end
    
end